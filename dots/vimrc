call pathogen#infect()

set nocompatible
set scrolloff=2
set nowrap
set wildmenu
set iskeyword+=?,!
set backspace=2
set background=dark
set ruler
set incsearch
set ignorecase
set number
noremap Y y$
set lcs=tab:>>   "show tabs
set lcs+=trail:. "show trailing spaces
set pastetoggle=<F11>
set mouse=v

" Shitty tab-v-space stuff
set smarttab
set expandtab
set softtabstop=2 shiftwidth=2

autocmd FileType c,cpp,java,php,html,erb,css,scss,sass,js,coffee,yml,sh,rake,feature,json,md,mdown,ru,sql,txt,xml,svg autocmd BufWritePre <buffer> :%s/\s\+$//e

filetype plugin plugin on
filetype plugin indent on
syntax on

" highlight less files
"
if bufname("%") =~ ".less"
  set ft=css
end

" highlight EJS files
"
if bufname("%") =~ ".ejs"
  set ft=html
end

if bufname("%") =~ ".go$"
  set tabstop=2 softtabstop=8 shiftwidth=2 noexpandtab
  set nolist
end

if bufname("%") =~ "Makefile"
  set tabstop=2 softtabstop=8 shiftwidth=8 noexpandtab
  set nolist
end

if bufname("%") =~ ".py"
  set tabstop=2 softtabstop=8 shiftwidth=2 noexpandtab
end

noremap Q @q

function! BDD(args)
  if bufname("%") =~ "test_.*.rb-n "
    call RunTest(a:args)
  elseif bufname("%") =~ ".scala"
    call RunSBTTest()
  elseif bufname("%") =~ ".feature"
    call RunCucumber(a:args)
  elseif bufname("%") =~ "spec.rb"
    call RunSpec(a:args)
  elseif bufname("%") =~ "spec.js"
    call RunJavascriptSpec(a:args)
  else
    echo "Don't know how to BDD this file"
  end
endfunction

function! RunTest(args)
  let cursor = matchstr(a:args, '\d\+')
  if cursor
    while !exists("cmd") && cursor != 1
      if match(getline(cursor), 'def test') >= 0
        let cmd = ":! ruby % -vv -n ". matchstr(getline(cursor), "test_[a-zA-Z_]*")
      else
        let cursor -= 1
      end
    endwhile
  end
  if !exists("cmd")
    let cmd = ":! ruby % -vv"
  end
  execute cmd
endfunction

function! RunJavascriptSpec(args)
  execute ":!rake jasmine:ci"
endfunction

function! RunSpec(args)
  if exists("b:rails_root") && filereadable(b:rails_root . "/script/spec")
    let spec = b:rails_root . "/script/spec"
  else
    let spec = "bundle exec rspec"

  end
  let cmd = ":! " . spec . " %" . a:args . ""
  execute cmd
endfunction

function! RunCucumber(args)
  if exists("b:rails_root") && filereadable(b:rails_root . "/script/spec")
    let cuke = b:rails_root . "/script/cucumber"
  else
    let cuke = "bundle exec cucumber "
  end

  let cmd = ":! " . cuke . " " . bufname("%") . " " . a:args
  execute cmd
endfunction

function! RunSBTTest()
  execute ":! java -jar ~/sbt-launcher-0.5.5.jar test"
endfunction

function Bar(type, msg)
  hi GreenBar term=reverse ctermfg=white ctermbg=green guifg=white guibg=green
  hi RedBar term=reverse ctermfg=white ctermbg=red guifg=white guibg=red
  if a:type == "red"
    echohl RedBar
  else
    echohl GreenBar
  endif
  echon a:msg repeat(" ", &columns - strlen(a:msg) - 1)
  echohl None
endfunction

map !s :call BDD(":" . <C-r>=line('.')<CR>)
map !S :call BDD("")

" \s to toggle spelling
nmap <silent> <leader>s :set spell!<CR>

" Clean up whitespace at the end of files.
map !b :%s/\s\+$//g<CR>
map !c :!ctags -R .

let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'

set wildignore+=*/tmp/*,*.so,*.swp,*.zip
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'

set colorcolumn=81
set noshowmode

set encoding=utf-8
set guifont=Consolas\ for\ Powerline:h9
